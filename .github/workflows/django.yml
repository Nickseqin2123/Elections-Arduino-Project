name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}  # Указываем пароль для root
          MYSQL_DATABASE: elections  # Создаём базу данных при старте контейнера
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-timeout=30s --health-retries=5

    steps:
      - name: Копирование кода из репозитория
        uses: actions/checkout@v4

      - name: Установка python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Установка зависимостей
        run: pip install -r requirements.txt

      - name: Ждем, пока MySQL контейнер поднимется
        run: |
          docker exec mysql mysqladmin -uroot -p${{ secrets.DB_PASSWORD }} --silent --wait=30 ping

      - name: Создание базы данных и пользователя
        run: |
          docker exec -i mysql mysql -uroot -p${{ secrets.DB_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS elections;"
          docker exec -i mysql mysql -uroot -p${{ secrets.DB_PASSWORD }} -e "GRANT ALL PRIVILEGES ON elections.* TO 'root'@'%' WITH GRANT OPTION;"

      - name: Запускаем миграции
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: python ElectionServer/manage.py migrate

      - name: Запускаем тесты
        env:
          SHA_ELECTION: ${{ secrets.SHA_ELECTION }}
          HASH_ELECTION: ${{ secrets.HASH_ELECTION }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: python ElectionServer/manage.py test
